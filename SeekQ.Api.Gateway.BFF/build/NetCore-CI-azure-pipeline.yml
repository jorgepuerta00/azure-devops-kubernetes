# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include: 
    - master

variables:
  buildConfiguration: 'Release'
  location: 'South Central US'
  acrHostName: 'seekqcontainer.azurecr.io'
  acrName: 'seekqcontaineracr'
  rgName: 'cloud-shell-storage-southcentralus'
  imageName: 'jorgepuerta00/gatewayapi'
  webAppName: 'seekblobwebapp'

stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'Ubuntu-20.04'
    steps:
    
    # Create or update the ACR resource
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Azure Container Registry'
      inputs:
        azureSubscription: 'Azure subscription'
        resourceGroupName: '$(rgName)'
        location: $(location)
        csmFile: '$(System.DefaultWorkingDirectory)/**/containerRegistry-template.json'
        overrideParameters: '-registryName "$(acrName)" -registryLocation "$(location)" -registrySku standard'

    # Restore dependencies
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      displayName: 'Restore Nuget Packages'
    
    # Build app
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--no-restore'
      displayName: 'Build projects'

    # Run unit tests 
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Test.csproj'
        arguments: '--no-restore'
      displayName: 'Run Tests'

    # Publish the app
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/SeekQ.Api.Gateway.BFF.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'
        modifyOutputPath: false
      displayName: 'Publish SeekQ.Api.Gateway.BFF'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    # Build container image
    - task: Docker@1
      displayName: 'Build container image'
      inputs:
        azureSubscriptionEndpoint: 'Azure subscription'
        azureContainerRegistry: '$(acrHostName)'
        imageName: '$(imageName):$(Build.BuildId)'
        useDefaultContext: false
        buildContext: '$(System.DefaultWorkingDirectory)/PublishedWebApp'

    # Push container image
    - task: Docker@1
      displayName: 'Push container image'
      inputs:
        azureSubscriptionEndpoint: 'Azure subscription'
        azureContainerRegistry: '$(acrHostName)'
        command: 'Push an image'
        imageName: '$(imageName):$(Build.BuildId)'  